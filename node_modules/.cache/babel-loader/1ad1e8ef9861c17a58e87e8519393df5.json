{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCart = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"AddtoCart\",\n  initialState: initialCart,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      s;\n\n      if (!existingItem) {\n        state.items.push({\n          itemID: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingitem = state.items.find(item => item.id === id);\n\n      if (existingitem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingitem.quantity--;\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/unthinkable-lap-0253/Desktop/React/redux-advance-async/src/store/cart-slice.js"],"names":["createSlice","initialCart","items","totalQuantity","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","s","push","itemID","price","quantity","totalPrice","title","removeItemFromCart","existingitem","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,aAAa,EAAE;AAFG,CAApB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,WADsB;AAE5BC,EAAAA,YAAY,EAAEL,WAFc;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC3B,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,YAAY,GAAGJ,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;AACAC,MAAAA,CAAC;;AACD,UAAI,CAACJ,YAAL,EAAmB;AACjBJ,QAAAA,KAAK,CAACP,KAAN,CAAYgB,IAAZ,CAAiB;AACfC,UAAAA,MAAM,EAAER,OAAO,CAACK,EADD;AAEfI,UAAAA,KAAK,EAAET,OAAO,CAACS,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAEX,OAAO,CAACS,KAJL;AAKff,UAAAA,IAAI,EAAEM,OAAO,CAACY;AALC,SAAjB;AAOD,OARD,MAQO;AACLV,QAAAA,YAAY,CAACQ,QAAb;AACAR,QAAAA,YAAY,CAACS,UAAb,GAA0BT,YAAY,CAACS,UAAb,GAA0BX,OAAO,CAACS,KAA5D;AACD;AACF,KAjBO;;AAkBRI,IAAAA,kBAAkB,CAACf,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMa,YAAY,GAAGhB,KAAK,CAACP,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;;AACA,UAAIS,YAAY,CAACJ,QAAb,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYwB,MAAZ,CAAoBX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;AACD,OAFD,MAEO;AACLS,QAAAA,YAAY,CAACJ,QAAb;AACAI,QAAAA,YAAY,CAACH,UAAb,GAA0BG,YAAY,CAACH,UAAb,GAA0BG,YAAY,CAACL,KAAjE;AACD;AACF;;AA3BO;AAHkB,CAAD,CAA7B;AAkCA,OAAO,MAAMO,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAS,CAACyB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCart = {\n  items: [],\n  totalQuantity: 0,\n};\n\nconst cartSlice = createSlice({\n  name: \"AddtoCart\",\n  initialState: initialCart,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      s\n      if (!existingItem) {\n        state.items.push({\n          itemID: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingitem = state.items.find((item) => item.id === id);\n      if (existingitem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingitem.quantity--;\n        existingitem.totalPrice = existingitem.totalPrice - existingitem.price;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}