{"ast":null,"code":"var _jsxFileName = \"/home/unthinkable-lap-0253/Desktop/React/redux-advance-async/src/App.js\",\n    _s = $RefreshSig$();\n\n// import { Fragment, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Cart from \"./components/Cart/Cart\";\n// import Layout from \"./components/Layout/Layout\";\n// import Products from \"./components/Shop/Products\";\n// import { uiActions } from \"./store/ui-slice\";\n// import Notification from \"./components/UI/Notification\";\n// let isInitial = true;\n// function App() {\n//   const cart = useSelector((state) => state.cart);\n//   const dispatch = useDispatch();\n//   const notification = useSelector((state) => state.ui.notification);\n//   useEffect(() => {\n//     const sendCartData = async () => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"pending\",\n//           title: \"Sending\",\n//           message: \"Sending cart data to Server\",\n//         })\n//       );\n//       const response = await fetch(\n//         \"https://cart-a1ef2-default-rtdb.firebaseio.com/cart.json\",\n//         {\n//           method: \"PUT\",\n//           body: JSON.stringify(cart),\n//         }\n//       );\n//       if (!response.ok) {\n//         throw new Error(\"Sending data to card failed!!\");\n//       }\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"success\",\n//           title: \"Success!!!\",\n//           message: \"Sending data to card Success!!\",\n//         })\n//       );\n//     };\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"error\",\n//           title: \"Error!!!\",\n//           message: \"Sending data to card failed!!\",\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         <Cart />\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n// export default App;\nimport { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartData = async () => {\n      const response = await fetch(\"https://cart-a1ef2-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending data to card failed!!\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!!!\",\n        message: \"Sending data to card Success!!\"\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!!!\",\n        message: \"Sending data to card failed!!\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"dcnJ9GP9328IDZeP/TrtBK6vxTQ=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/unthinkable-lap-0253/Desktop/React/redux-advance-async/src/App.js"],"names":["Fragment","useEffect","useDispatch","useSelector","Cart","Layout","Products","uiActions","Notification","isInitial","App","cart","state","dispatch","notification","ui","sendCartData","response","fetch","method","body","JSON","stringify","ok","Error","showNotification","status","title","message","catch","error"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,YAAY,GAAGX,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACG,EAAN,CAASD,YAArB,CAAhC;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,YAAY,GAAG,YAAY;AAE/B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACM,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAEDX,MAAAA,QAAQ,CACNN,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KArBD;;AAuBA,QAAInB,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDO,IAAAA,YAAY,GAAGa,KAAf,CAAsBC,KAAD,IAAW;AAC9BjB,MAAAA,QAAQ,CACNN,SAAS,CAACkB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KARD;AASD,GAtCQ,EAsCN,CAACjB,IAAD,EAAOE,QAAP,CAtCM,CAAT;AAwCA,sBACE,QAAC,QAAD;AAAA,eACGC,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACY,MADvB;AAEE,MAAA,KAAK,EAAEZ,YAAY,CAACa,KAFtB;AAGE,MAAA,OAAO,EAAEb,YAAY,CAACc;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5DQlB,G;UACMP,W,EACID,W,EACIC,W;;;KAHdO,G;AA8DT,eAAeA,GAAf","sourcesContent":["// import { Fragment, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Cart from \"./components/Cart/Cart\";\n// import Layout from \"./components/Layout/Layout\";\n// import Products from \"./components/Shop/Products\";\n// import { uiActions } from \"./store/ui-slice\";\n// import Notification from \"./components/UI/Notification\";\n\n// let isInitial = true;\n\n// function App() {\n//   const cart = useSelector((state) => state.cart);\n//   const dispatch = useDispatch();\n//   const notification = useSelector((state) => state.ui.notification);\n\n//   useEffect(() => {\n//     const sendCartData = async () => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"pending\",\n//           title: \"Sending\",\n//           message: \"Sending cart data to Server\",\n//         })\n//       );\n//       const response = await fetch(\n//         \"https://cart-a1ef2-default-rtdb.firebaseio.com/cart.json\",\n//         {\n//           method: \"PUT\",\n//           body: JSON.stringify(cart),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Sending data to card failed!!\");\n//       }\n\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"success\",\n//           title: \"Success!!!\",\n//           message: \"Sending data to card Success!!\",\n//         })\n//       );\n//     };\n\n//     if (isInitial) {\n//       isInitial = false;\n//       return;\n//     }\n\n//     sendCartData().catch((error) => {\n//       dispatch(\n//         uiActions.showNotification({\n//           status: \"error\",\n//           title: \"Error!!!\",\n//           message: \"Sending data to card failed!!\",\n//         })\n//       );\n//     });\n//   }, [cart, dispatch]);\n\n//   return (\n//     <Fragment>\n//       {notification && (\n//         <Notification\n//           status={notification.status}\n//           title={notification.title}\n//           message={notification.message}\n//         />\n//       )}\n//       <Layout>\n//         <Cart />\n//         <Products />\n//       </Layout>\n//     </Fragment>\n//   );\n// }\n\n// export default App;\n\n\nimport { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { uiActions } from \"./store/ui-slice\";\nimport Notification from \"./components/UI/Notification\";\n\nlet isInitial = true;\n\nfunction App() {\n  const cart = useSelector((state) => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.ui.notification);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      \n      const response = await fetch(\n        \"https://cart-a1ef2-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending data to card failed!!\");\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!!!\",\n          message: \"Sending data to card Success!!\",\n        })\n      );\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch((error) => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!!!\",\n          message: \"Sending data to card failed!!\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        <Cart />\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}